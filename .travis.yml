language: android
jdk: oraclejdk8
env:
  global:
    - ANDROID_API=29
    - ANDROID_BUILD_TOOLS=26.0.2
    - ADB_INSTALL_TIMEOUT=5
    - EMULATOR_API_LEVEL=29
    - ABI=x86_64
    - EMU_FLAVOR=default
    - EMU_CHANNEL=""
    - ANDROID_HOME=${HOME}/android-sdk
    - TOOLS=${ANDROID_HOME}/tools
    - PATH=${ANDROID_HOME}:${ANDROID_HOME}/emulator:${TOOLS}:${TOOLS}/bin:${ANDROID_HOME}/platform-tools:${PATH}

android:
  components:
    - tools
    - platform-tools
    - build-tools-$ANDROID_BUILD_TOOLS
    - android-$ANDROID_API
    - android-$EMULATOR_API_LEVEL
    - extra-google-google_play_services
    - extra-google-m2repository
    - extra-android-m2repository
    - sys-img-armeabi-v7a-android-$EMULATOR_API_LEVEL

  licenses:
    - android-sdk-preview-license-.+
    - android-sdk-license-.+
    - google-gdk-license-.+
before_install:
  - chmod +x gradlew
  - chmod +x scripts/build_publish.sh
  - chmod +x scripts/build_compile.sh
  - ./gradlew dependencies || true
  # Set up Android SDK
  - wget -q "https://dl.google.com/android/repository/sdk-tools-linux-$ANDROID_TOOLS.zip" -O android-sdk-tools.zip
  - unzip -q android-sdk-tools.zip -d ${ANDROID_HOME}
  - rm android-sdk-tools.zip

  # Avoid harmless sdkmanager warning
  - mkdir ~/.android
  - echo 'count=0' > ~/.android/repositories.cfg

  # Accept licenses before installing components, no need to echo y for each component
  - yes | sdkmanager --licenses >/dev/null

install:
  # Download SDK tools
  - sdkmanager "platform-tools" >/dev/null
  - sdkmanager "tools" >/dev/null # A second time per Travis docs, gets latest versions
  - sdkmanager "build-tools;28.0.3" >/dev/null # Implicit gradle dependency - gradle drives changes
  - sdkmanager "platforms;android-$EMULATOR_API_LEVEL" >/dev/null # We need the API of the emulator we will run
  - sdkmanager "platforms;android-28" >/dev/null # We need the API of the current compileSdkVersion from gradle.properties  -

  - sdkmanager "emulator" >/dev/null
  - |
    if [[ $ABI =~ "arm" ]]; then
      # Download a pinned version of the emulator since default version can cause issues
      ${ANDROID_HOME}/emulator/emulator -version
      emulator_version=5264690 # 29.2.1.0 (build_id 5889189) ==> 28.0.23.0 (build_id 5264690)
      # sudo apt-get install -y libunwind8 libc++1
      curl -fo emulator.zip "https://dl.google.com/android/repository/emulator-linux-$emulator_version.zip"
      rm -rf "${ANDROID_HOME}/emulator"
      unzip -q emulator.zip -d "${ANDROID_HOME}"
      rm -f emulator.zip
      # install build tools and platforms for arm (to allow emulator to run)
      sdkmanager "build-tools;25.0.2" "platforms;android-25" > /dev/null
    fi
  - ${ANDROID_HOME}/emulator/emulator -version

  - sdkmanager "extras;android;m2repository" >/dev/null
  - sdkmanager "system-images;android-$EMULATOR_API_LEVEL;$EMU_FLAVOR;$ABI" >/dev/null # install system images for emulator

  # Create an Android emulator
  #  - echo no | avdmanager --verbose create avd --force -n test -k "system-images;android-$EMULATOR_API_LEVEL;$EMU_FLAVOR;$ABI" -c 10M
  - echo no | avdmanager --verbose create avd --force -n test -k "system-images;android-$EMULATOR_API_LEVEL;$EMU_FLAVOR;$ABI"
  - EMU_PARAMS="
    -avd test
    -verbose
    -no-window
    -no-audio
    "
    - EMU_COMMAND="emulator"
    - |
    if [[ $ABI =~ "x86" ]]; then
    EMU_COMMAND="emulator-headless"
    else
    # emulate graphics if running on ARM
    EMU_PARAMS="${EMU_PARAMS} -gpu swiftshader"
    fi
    # This double "sudo" monstrosity is used to have Travis execute the
    # emulator with its new group permissions and help preserve the rule
    # of least privilege.
    - sudo -E sudo -u $USER -E bash -c "${ANDROID_HOME}/emulator/${EMU_COMMAND} ${EMU_PARAMS} &"
before_script:
  - git lfs pull
  # Download required emulator tools
#  - echo y | sdkmanager --no_https "platforms;android-$EMULATOR_API_LEVEL" >/dev/null # We need the API of the emulator we will run
#  - echo y | sdkmanager --no_https $EMU_CHANNEL "emulator" >/dev/null
#  - echo y | sdkmanager --no_https "system-images;android-$EMULATOR_API_LEVEL;$EMU_FLAVOR;$ABI" >/dev/null # install our emulator
#  #- echo no | android create avd --force -n test -t android-26 --abi armeabi-v7a -c 100M
#  - echo no | avdmanager create avd --force -n test -k "system-images;android-$EMULATOR_API_LEVEL;$EMU_FLAVOR;$ABI" -c 10M
#  - emulator -avd test -no-audio -no-window &
  - android-wait-for-emulator
  - adb shell input keyevent 82 &

script:
  - ./scripts/build_publish.sh
#  - "./gradlew clean build -PdisablePreDex --stacktrace"

#after_success:
#  - ./scripts/build_publish.sh